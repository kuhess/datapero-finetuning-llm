[tool.poetry]
name = "dataforge"
version = "0.1.0"
description = ""
authors = ["Quentin Suire <dev@quentinsuire.com>"]
readme = "README.md"

[tool.poetry.scripts]
dataforge = "dataforge.cli:cli"

[tool.poetry.dependencies]
python = "^3.10"
octoai-sdk = "^0.10.1"
langchain-community = "^0.0.28"
PyMuPDF = "^1.23.26"
python-dotenv = "^1.0.1"
aiometer = "^0.5.0"
click = "^8.1.7"
loguru = "^0.7.2"
langchain = "^0.1.12"
langchain-experimental = "^0.0.54"
langchain-openai = "^0.0.8"
tiktoken = "^0.6.0"
tqdm = "^4.66.2"
pyyaml = "^6.0.1"
yamldataclassconfig = "^1.5.0"
jsonschema = "^4.21.1"
aiofile = "^3.8.8"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
ruff = "^0.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88

lint.select = ["ALL"]
lint.ignore = [
    "D203",   # ignore in favor of D211
    "D213",   # ignore in favor of D212
    "D100",   # doctring
    "D101",   # doctring
    "D102",   # doctring
    "D103",   # doctring
    "D104",   # doctring
    "D105",   # doctring
    "D106",   # doctring
    "D107",   # doctring
    "ANN101", # missing type annotation for `self` in method
    "PD011",  # use `.to_numpy()` instead of `.values`
    "TD002",  # missing author name in TODO
    "TD003",  # missing link in TODO
    "FIX002", # line contains TODO
    "ISC001", # single line implicit string concatenation
    "COM812", # missing trailing comma
    "S320",   # lxml is vulnerable to XML attacks
    "S311",   # pseudo-random not suitable for cryptography
]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int"]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*" = [
    "D",
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.mypy]
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
